(function($){const defaultTranslations={btnEmptyText:"Please select..",deselectAllText:"Deselect All",selectAllText:"Select All",searchText:"Search..",showSelectedText:function(count,total){return count+" of "+total+" selected"}};const translations=window.bsSelectTranslations||defaultTranslations;const WRAPPER_CLASS="js-bs-select-dropdown";$.bsSelect={setDefaults:function(options){this.DEFAULTS=$.extend({},this.DEFAULTS,options||{})},getDefaults:function(){const defCopy=this.DEFAULTS;delete defCopy.debug;delete defCopy.debugElement;return defCopy},DEFAULTS:{btnClass:"btn-outline-dark",btnWidth:"fit-content",btnEmptyText:translations.btnEmptyText,btnSplit:false,dropDirection:null,dropIconClass:"bi bi-chevron-down",menuClass:null,menuHeaderClass:"text-bg-secondary text-uppercase",search:true,menuPreHtml:null,menuAppendHtml:null,menuMaxHeight:300,showSubtext:true,showActionMenu:true,showMultipleCheckboxes:false,actionMenuBtnClass:"btn-light",showSelectionAsList:false,showSelectedText:translations.showSelectedText,formatSelectedText(title,subtext){subtext=isValueEmpty(subtext)?"":`<small class="text-muted">${subtext}</small>`;return`<div class="d-flex flex-column align-items-start">
                                <span>${title}</span>
                                    ${subtext}
                            </div>`},deselectAllText:translations.deselectAllText,selectAllText:translations.selectAllText,checkedIcon:"bi bi-check-lg",debug:false,debugElement:null,menuItemClass:null,searchText:translations.searchText,onBeforeChange:null,onKeyDown:null}};function trigger($select,event,addParams=[]){let params=[];if(event!=="any.bs.select"){trigger($select,"any.bs.select");if(addParams.length){addParams.forEach(p=>{params.push(p)})}else{params.push($select.val())}$select.trigger(event,params)}else{$select.trigger(event)}const settings=$select.data("options");if(settings.debug){console.log("trigger",event,params);if(settings.debugElement!==null){const log=$("<small>",{class:"js-log border-bottom",html:"["+(new Date).toUTCString()+'] trigger <span class="text-warning">'+event+"</span> fired"}).prependTo(settings.debugElement);setTimeout(function(){log.remove()},5e3)}}}function getDropDown($select){return $select.closest(`.${WRAPPER_CLASS}`)}function show($select){const $dropdown=getDropDown($select);if($dropdown.length){$dropdown.dropdown("show")}}function hide($select){const $dropdown=getDropDown($select);if($dropdown.length){$dropdown.dropdown("hide")}}function getSelectedValuesFromDropdown($select){const $dropdown=getDropDown($select);const multiple=$select.prop("multiple");let values=[];$dropdown.find(".dropdown-item:not(.active)").find(".dropdown-item-select-icon").hide();$dropdown.find(".dropdown-item.active").each(function(i,element){let val=$select.find("option:eq("+$(element).data("index")+")").prop("value");if(val!==false){values.push(val);$(element).find(".dropdown-item-select-icon").show()}});if(multiple){return values}else if(!isValueEmpty(values)){return values[0]}else{return null}}function setSelectValues($select){const settings=$select.data("options");if(settings.debug){console.log("bsSelect:setSelectValues",$select.val())}let values=getSelectedValuesFromDropdown($select);$select.val(values)}function toggleAllItemsState($select,state=false){const dropdown=getDropDown($select);const beforeValues=$select.val();const options=$select.find("option");const settings=$select.data("options");const multiple=false!==$select.prop("multiple");options.prop("selected",state);const toggleCheckIcon=multiple&&settings.showMultipleCheckboxes;const $dropdownMenuInner=dropdown.find(".js-menu-dropdown-inner");options.each(function(i){const $item=dropdown.find('.dropdown-item[data-index="'+i+'"]');if(state){$item.addClass("active");$item.find(".dropdown-item-select-icon").show()}else{$item.removeClass("active");$item.find(".dropdown-item-select-icon").hide()}});if(toggleCheckIcon){dropdown.find(".dropdown-item:not(.active) .js-icon-checklist.bi-check-square").removeClass("bi-check-square").addClass("bi-square");dropdown.find(".dropdown-item.active .js-icon-checklist.bi-square").removeClass("bi-square").addClass("bi-check-square")}setSelectValues($select);setDropdownTitle($select);$dropdownMenuInner.scrollTop(0);const ev=state?"selectAll":"selectNone";trigger($select,ev+".bs.select");const afterValues=getSelectedValuesFromDropdown($select);if(hasValueChanged(beforeValues,afterValues)){trigger($select,"change.bs.select",[beforeValues,afterValues])}}function getBootstrapMajorVersion(){if(typeof $.fn.modal==="undefined"||typeof $.fn.modal.Constructor==="undefined"){console.error("Bootstrap Modal Plugin ist nicht verfÃ¼gbar");return}const bootstrapVersion=$.fn.modal.Constructor.VERSION;return parseInt(bootstrapVersion.split(".")[0])}function setupDropdown($dropdown,selectElement,multiple){const $dropdownToggle=$dropdown.find(".dropdown-toggle");const autoclose=$dropdownToggle.data("autoClose")||$dropdownToggle.data("bsAutoClose")||"true";const BS_V=getBootstrapMajorVersion();$dropdown.on("click",".js-select-select-all",function(e){e.preventDefault();if(onBeforeChange(selectElement)){toggleAllItemsState(selectElement,true);if(BS_V===4&&multiple&&(autoclose==="true"||autoclose==="outside")){e.stopPropagation()}}}).on("click",".js-select-select-none",function(e){e.preventDefault();if(onBeforeChange(selectElement)){toggleAllItemsState(selectElement,false);if(BS_V===4&&multiple&&(autoclose==="true"||autoclose==="outside")){e.stopPropagation()}}}).on("hidden.bs.dropdown",function(){let searchField=$(this).find('[type="search"]');if(searchField.length){const searchElements=$dropdown.find("[data-index]");searchElements.removeClass("d-none").addClass("d-flex");searchField.val(null).trigger("keyup")}}).on("keyup input",'[type="search"]',function(e){const settings=selectElement.data("options");const searchField=$(e.currentTarget);const searchPattern=searchField.val().trim();if(settings.debug){console.log("bsSelect:search",searchPattern)}const searchElements=$dropdown.find("[data-index]");const dropdownHeaders=$dropdown.find(".dropdown-header");searchElements.removeClass("d-none").addClass("d-flex");dropdownHeaders.removeClass("d-none");if(settings.debug){console.log("bsSelect:search elements:",searchElements.length)}if(!isValueEmpty(searchPattern)){const search=searchPattern.toUpperCase();searchElements.each(function(index,value){let currentName=$(value).text().trim();if(currentName.toUpperCase().indexOf(search)>-1){if(settings.debug){console.log("bsSelect:search elements found:",currentName)}$(value).removeClass("d-none").addClass("d-flex")}else{if(settings.debug){console.log("bsSelect:search elements not found:",currentName)}$(value).addClass("d-none").removeClass("d-flex")}});dropdownHeaders.addClass("d-none")}else{if(settings.debug){console.log("bsSelect:search is empty")}searchElements.removeClass("d-none");dropdownHeaders.removeClass("d-none")}}).on("click",'[data-dismiss="dropdown"], [data-bs-dismiss="dropdown"]',function(e){const btn=$(e.currentTarget);const dd=btn.closest("."+WRAPPER_CLASS);dd.find('[data-bs-toggle="dropdown"],[data-toggle="dropdown"]').dropdown("hide")}).on("click",".dropdown-item",function(e){e.preventDefault();const settings=selectElement.data("options");const item=$(e.currentTarget);if(onBeforeChange(selectElement)){const beforeValues=selectElement.val();item.toggleClass("active");const active=item.hasClass("active");if(!multiple){$dropdown.find(".dropdown-item.active").not(item).removeClass("active")}const toggleCheckIcon=multiple&&settings.showMultipleCheckboxes;if(active){if(toggleCheckIcon){item.find(".js-icon-checklist").removeClass("bi-square").addClass("bi-check-square")}item.find(".dropdown-item-select-icon").show()}else{if(toggleCheckIcon){item.find(".js-icon-checklist").removeClass("bi-check-square").addClass("bi-square")}item.find(".dropdown-item-select-icon").hide()}setSelectValues(selectElement);const afterValues=getSelectedValuesFromDropdown(selectElement);setDropdownTitle(selectElement);if(hasValueChanged(beforeValues,afterValues)){trigger(selectElement,"change.bs.select",[beforeValues,afterValues])}if(BS_V===4&&multiple&&(autoclose==="true"||autoclose==="outside")){e.stopPropagation()}}}).on("keydown",function(e){const $wrap=$(e.currentTarget);const $selectElement=$wrap.find("select");const settings=$selectElement.data("options");if(typeof settings.onKeyDown==="function"){settings.onKeyDown($selectElement,e)}trigger($selectElement,"keydown.bs.select",[$selectElement,e])}).on("keydown",'[type="search"]',function(e){switch(e.code){case"Enter":e.preventDefault();const item=$dropdown.find(".dropdown-item:visible:first");if(item.length){item.trigger("click");$dropdown.removeClass("show");$dropdown.find(".dropdown-menu").removeClass("show")}break;default:}}).on("hide.bs.dropdown",function(){const $select=$dropdown.find("select");const valueBefore=$select.data("valueBefore");const currentValue=$select.val();const valueChanged=hasValueChanged(valueBefore,currentValue);trigger($select,"hide.bs.select",[valueChanged])}).on("hidden.bs.dropdown",function(){const $select=$dropdown.find("select");$select.removeData("valueBefore");trigger($select,"hidden.bs.select")}).on("show.bs.dropdown",function(){const $select=$dropdown.find("select");$select.data("valueBefore",$select.val());trigger($select,"show.bs.select")}).on("shown.bs.dropdown",function(){const $select=$dropdown.find("select");trigger($select,"shown.bs.select");const searchElement=$dropdown.find('[type="search"]');if(searchElement.length){searchElement.focus()}const $dropdownMenuInner=$dropdown.find(".js-menu-dropdown-inner");const $activeItem=$dropdown.find(".dropdown-item.active:first");if($activeItem.length){$dropdownMenuInner.scrollTop($dropdownMenuInner.scrollTop()+$activeItem.position().top-$dropdownMenuInner.position().top)}else{$dropdownMenuInner.scrollTop(0)}})}function arraysEqual(arr1,arr2){if(arr1.length!==arr2.length){return false}const sortedArr1=[...arr1].sort();const sortedArr2=[...arr2].sort();for(let i=0;i<sortedArr1.length;i++){if(sortedArr1[i]!==sortedArr2[i]){return false}}return true}function hasValueChanged(valueBefore,currentValue){if(Array.isArray(valueBefore)&&Array.isArray(currentValue)){return!arraysEqual(valueBefore,currentValue)}if(typeof valueBefore==="object"&&typeof currentValue==="object"){return JSON.stringify(valueBefore)!==JSON.stringify(currentValue)}return valueBefore!==currentValue}function isValueEmpty(value){if(value===null||value===undefined){return true}if(Array.isArray(value)){return value.length===0}if(typeof value==="string"){return value.trim().length===0}return false}function init($select,fireTrigger=false){const settings=$select.data("options");const multiple=$select.prop("multiple");if(settings.debug){console.log("bsSelect:init with value:",$select.val())}let $dropdown=getDropDown($select);const isSelectDisabled=$select.hasClass("disabled")||$select.is("[disabled]");if($dropdown.length){return $dropdown}if(!multiple&&isValueEmpty($select.val())){$select.prop("selectedIndex",-1)}let selectedValue=$select.val();$dropdown=$("<div>",{class:`${WRAPPER_CLASS} position-relative`,css:{width:settings.btnWidth}}).insertAfter($select);if(settings.dropDirection!==null){$dropdown.addClass(settings.dropDirection)}const toggleIconClass=settings.dropIconClass===null?"dropdown-toggle":"";const dropIcon=settings.dropIconClass!==null?`<i class="ms-2 ml-2 ${settings.dropIconClass}"></i>`:"";if(!settings.btnSplit){$("<button>",{class:`btn ${settings.btnClass} ${toggleIconClass} d-flex flex-nowrap align-items-start flex-nowrap js-dropdown-header justify-content-between`,type:"button","data-bs-toggle":"dropdown","data-toggle":"dropdown","aria-expanded":false,"data-bs-auto-close":multiple?"outside":true,html:`<div class="js-selected-text">${settings.btnEmptyText}</div>${dropIcon}`,css:{width:settings.btnWidth}}).appendTo($dropdown)}else{$dropdown.addClass("btn-group");$("<button>",{class:`btn ${settings.btnClass} d-flex flex-nowrap align-items-start js-dropdown-header justify-content-between`,type:"button",html:`<div class="js-selected-text">${settings.btnEmptyText}</div>`,css:{width:settings.btnWidth}}).appendTo($dropdown);$("<button>",{class:`btn ${settings.btnClass} dropdown-toggle dropdown-toggle-split`,"data-bs-toggle":"dropdown","data-toggle":"dropdown","aria-expanded":false,"data-bs-auto-close":multiple?"outside":true}).appendTo($dropdown)}const isDropDownInBootstrapTable=$dropdown.closest(".fixed-table-body:not(.overflow-visible)").length;if(isDropDownInBootstrapTable){$dropdown.closest(".fixed-table-body").addClass("overflow-visible")}setupDropdown($dropdown,$select,multiple);if($select.attr("id")){const selectId=$select.attr("id");const label=$(`label[for="${selectId}"]`);if(label.length){label.on("click",function(){const closestDropDown=getDropDown($(`select[id="${selectId}"]`));closestDropDown.trigger("click")})}}$select.appendTo($dropdown);$select.val(selectedValue);$select.css({position:"absolute",left:"0",opacity:"0",height:"0",width:"0"});const $dropdownMenu=$("<div>",{class:"dropdown-menu pl-1 ps-1 "+settings.menuClass??""}).appendTo($dropdown);let searchInput="";let closeButton="";let actionMenu="";if(true===settings.search){searchInput=`<input type="search" autocomplete="off" class="form-control form-control-sm mr-auto me-auto mr-auto" placeholder="${settings.searchText}">`}if(multiple){if(settings.showActionMenu){actionMenu=`<div class="d-flex flex-nowrap mt-2 p-0"><a href="#" class="btn-sm text-nowrap btn ${settings.actionMenuBtnClass} js-select-select-all">${settings.selectAllText}</a><span class="mx-1"></span><a href="#" class="btn-sm text-nowrap btn ${settings.actionMenuBtnClass} js-select-select-none">${settings.deselectAllText}</a></div>`}}let toolbarClasses="";if(searchInput!==""||closeButton!==""||actionMenu!==""){toolbarClasses="px-2 pb-2 pt-2 border-bottom"}$(`<div class="d-flex flex-column ${toolbarClasses}"><div class="d-flex  justify-content-end align-items-center">${searchInput}${closeButton}</div>${actionMenu}</div>`).appendTo($dropdownMenu);if(settings.menuPreHtml!==null){$("<div>",{html:settings.menuPreHtml,class:"text-muted p-3 fs-6"}).appendTo($dropdownMenu);$('<hr class="dropdown-divider mt-0">').appendTo($dropdownMenu)}const $dropdownMenuInner=$(`<div>`,{class:"js-menu-dropdown-inner",css:{overflowY:"auto",maxHeight:`${settings.menuMaxHeight}px`}}).appendTo($dropdownMenu);$dropdownMenu.find('[type="search"]').prop("autocomplete","off");let i=0;let inOGroup=false;const validElements=$select.find("optgroup, option");validElements.each(function(index,option){const element=$(option);const isOptGroup=element.is("optgroup");if(isOptGroup){$("<h6>",{class:`dropdown-header text-start my-0 w-100 rounded-0 py-1 ${settings.menuHeaderClass}`,text:element.attr("label")}).appendTo($dropdownMenuInner);return}const classList=element.get(0).className.trim();const value=element.prop("value");const inOptGroup=element.closest("optgroup").length!==0;const isDisabled=isSelectDisabled||element.is("[disabled]")||element.hasClass("disabled");const disabledClass=isDisabled?"disabled":"";let isSelected=false;let selected="";if(value!==false){if(multiple){isSelected=$.inArray(value,selectedValue)>-1;selected=isSelected?"active":""}else{isSelected=selectedValue===value;selected=isSelected?"active":""}}const showSubtext=settings.showSubtext&&element.data("subtext");const showCheckList=multiple&&settings.showMultipleCheckboxes;const showIcon=element.data("icon");const $subtext=showSubtext?`<small class="text-muted">${element.data("subtext")}</small>`:"";const $icon=showIcon?`<i class="${element.data("icon")}"></i> `:"";const paddingLeftClass=inOptGroup||$icon!==""?"ps-2 pl-2":"";let checkElement="";let checkElementPre="";if(showCheckList){checkElement=getCheckListIcon(isSelected)}else{checkElementPre=`<i class="${settings.checkedIcon}"></i>`}if(inOGroup&&!inOptGroup){$(`<hr>`,{class:"dropdown-divider"}).appendTo($dropdownMenuInner)}const itemClass=settings.menuItemClass===null?"":settings.menuItemClass;$("<div>",{tabindex:i,class:classList,html:`<a href="#" class="dropdown-item ${selected} ${disabledClass} px-2 d-flex flex-nowrap align-items-center ${itemClass} " data-index="${i}" style="cursor: pointer;">${checkElement}${$icon}<div class="${paddingLeftClass} d-flex flex-column"><div>${element.text()}</div>${$subtext}</div><div class="dropdown-item-select-icon pl-1 ps-1 ml-auto ms-auto ">${checkElementPre}</div></a>`}).appendTo($dropdownMenuInner);inOGroup=inOptGroup;i++});setSelectValues($select);if(settings.menuAppendHtml!==null){$(`<hr>`,{class:"dropdown-divider"}).appendTo($dropdownMenuInner);$("<div>",{html:settings.menuAppendHtml,class:"text-muted fs-6",css:{padding:"4px 16px"}}).appendTo($dropdownMenuInner)}setDropdownTitle($select);if(fireTrigger){setTimeout(function(){trigger($select,"init.bs.select");$dropdown.show()},0)}return $dropdown}function getCheckListIcon(isSelected){return isSelected?`<i class="bi bi-check-square mr-2 me-2 js-icon-checklist"></i>`:`<i class="bi bi-square me-2 mr-2 js-icon-checklist"></i>`}function setDropdownTitle($select){const settings=$select.data("options");const $dropdown=getDropDown($select);const $titleElement=$dropdown.find(".js-dropdown-header .js-selected-text");let selectedValues=$select.val();const isEmpty=isValueEmpty(selectedValues);let title;let title2;let subtext2=null;let tooltip="";if(isEmpty){title2=settings.btnEmptyText}else{if(Array.isArray(selectedValues)){if(selectedValues.length===1){let $option=$select.find(`option[value="${selectedValues[0]}"]`);subtext2=settings.showSubtext&&$option.data("subtext")?$option.data("subtext"):null;title2=$option.text();tooltip=$option.text()}else{if(!settings.showSelectionAsList){let length=$select.find("option").length;title=settings.showSelectedText(selectedValues.length,length);title2=title;let tooltips=[];selectedValues.forEach(val=>{let $option=$select.find(`option[value="${val}"]`);tooltips.push($option.text())});tooltip+=tooltips.join(",")}else{let texts2=[];let subtexts2=[];let tooltips=[];selectedValues.forEach(val=>{let $option=$select.find(`option[value="${val}"]`);let hasSubtext=settings.showSubtext&&$option.data("subtext");subtexts2.push(hasSubtext?$option.data("subtext"):null);texts2.push($option.text());tooltips.push($option.text())});title2=texts2;subtext2=subtexts2;tooltip+=tooltips.join(",")}}}else{let $option=$select.find(`option[value="${selectedValues}"]`);if($option.hasClass("d-none")){title2=settings.btnEmptyText}else{let hasSubtexts=settings.showSubtext&&$option.data("subtext");subtext2=hasSubtexts?$option.data("subtext"):null;title2=$option.text();tooltip=$option.text()}}}$titleElement.html(formateSelectedText(settings,title2,subtext2));$titleElement.attr("title",tooltip)}function formateSelectedText(settings,title,subtext=null){if(Array.isArray(title)&&title.length>0){let returnString="";for(let i=0;i<title.length;i++){const sub=Array.isArray(subtext)&&subtext.length>i?subtext[i]:null;returnString+=formateSelectedText(settings,title[i],sub)}return returnString}return settings.formatSelectedText(title,subtext)}function val($select){const $dropdown=getDropDown($select);const beforeValues=$select.val();$dropdown.find(".dropdown-item.active").removeClass("active");$dropdown.find(".dropdown-item .js-icon-checklist.bi-check-square").removeClass("bi-check-square").addClass("bi-square");const disabledDropdownIcons=$dropdown.find(".dropdown-item.disabled");disabledDropdownIcons.removeClass("disabled");let values=beforeValues;if(!Array.isArray(values)){values=[values]}values.forEach(value=>{let index=$select.find(`option[value="${value}"]`).index();const item=$dropdown.find(`.dropdown-item[data-index="${index}"]`);item.addClass("active")});$dropdown.find(".dropdown-item.active .js-icon-checklist.bi-square").removeClass("bi-square").addClass("bi-check-square");setSelectValues($select);const afterValues=getSelectedValuesFromDropdown($select);if(hasValueChanged(beforeValues,afterValues)){trigger($select,"change.bs.select",[beforeValues,afterValues])}setDropdownTitle($select);disabledDropdownIcons.addClass("disabled")}function destroy($select,show,clearData=false){const settings=$select.data("options");if(settings.debug){console.log("bsSelect:destroy")}let val=$select.val();if(settings.debug){console.log("bsSelect:destroy value before: ",val)}let $dropdown=getDropDown($select);$select.insertBefore($dropdown);$select.val(val);if(settings.debug){console.log("bsSelect:destroy value after: ",$select.val())}if(clearData){$select.removeData("options")}$dropdown.remove();if(show){$select.css({position:"",left:"",opacity:"",height:"",width:""})}}function refresh($select){destroy($select,false,false);init($select,false)}function toggleDisabled($select){const dropDown=getDropDown($select);const btn=dropDown.find('[data-bs-toggle="dropdown"],[data-toggle="dropdown"]');if(btn.hasClass("disabled")){setDisabled($select,false)}else{setDisabled($select,true)}}function setDisabled($select,status){const dropDown=getDropDown($select);const btn=dropDown.find('[data-bs-toggle="dropdown"],[data-toggle="dropdown"]');if(status){btn.addClass("disabled")}else{btn.removeClass("disabled")}trigger($select,"toggleDisabled.bs.select",[status])}function setItemsDisabled($select,object){if(typeof object==="object"){if(!object.hasOwnProperty("value")){object.value=[]}if(!object.hasOwnProperty("enableOther")){object.enableOther=false}if(!object.hasOwnProperty("setSelected")){object.setSelected=null}if(!Array.isArray(object.value)){object.value=[object.value]}destroy($select,false,false);if(object.enableOther){$select.find("option").prop("disabled",false)}object.value.forEach(val=>{const option=$select.find(`option[value="${val}"]`);if(object.setSelected!==null){option.prop("selected",object.setSelected)}option.prop("disabled",true)});init($select,false)}}function onBeforeChange($select){const settings=$select.data("options");if(typeof settings.onBeforeChange==="function"){const ok=settings.onBeforeChange($select);if(ok){trigger($select,"acceptChange.bs.select")}else{trigger($select,"cancelChange.bs.select")}return ok}return true}function hasOptions($select){return $select.data("options")!==undefined}$.fn.bsSelect=function(options,param){const $elements=$(this);let callFunction=typeof options==="string";let optionsSet=typeof options==="object";return $elements.each(function(index,select){const $select=$(select);if(optionsSet){let setup;if(hasOptions($select)){setup=$.extend({},$.bsSelect.DEFAULTS,$select.data("options"),options)}else{setup=$.extend({},$.bsSelect.DEFAULTS,options)}$select.data("options",setup)}else if(!hasOptions($select)){$select.data("options",$.bsSelect.DEFAULTS)}init($select,true);if(callFunction){switch(options){case"getSelectedText":{let result;const value=$select.val();if(isValueEmpty(value)){result=""}else{const multiple=$select.prop("multiple");if(multiple&&Array.isArray(value)){const texts=[];value.forEach(val=>{texts.push($select.find('[value="'+val+'"]').text())});result=texts.join(", ")}else if(typeof value==="string"){result=$select.find('[value="'+value+'"]').text()}else{result=""}}if(typeof param==="function"){param(result,value)}}break;case"selectAll":{if(onBeforeChange($select)){toggleAllItemsState($select,true)}}break;case"selectNone":{if(onBeforeChange($select)){toggleAllItemsState($select,false)}}break;case"selectFirst":{if(onBeforeChange($select)){$select.val(null);$select.find("option").first().attr("selected",true);val($select)}}break;case"clear":{$select.val(null);$select.find("option,optgroup").remove();refresh($select);trigger($select,"clear.bs.select")}break;case"selectLast":{if(onBeforeChange($select)){$select.val(null);$select.find("option").last().attr("selected",true);val($select)}}break;case"hide":{hide($select)}break;case"show":{show($select)}break;case"val":{if(onBeforeChange($select)){$select.val(param);val($select)}}break;case"destroy":{trigger($select,"destroy.bs.select");destroy($select,true,param)}break;case"updateOptions":{$select.data("options",$.extend({},$.bsSelect.DEFAULTS,$select.data("options"),param||{}));refresh($select);trigger($select,"update.bs.select")}break;case"setBtnClass":{$select.data("options",$.extend({},$.bsSelect.DEFAULTS,$select.data("options"),{btnClass:param}));refresh($select);trigger($select,"update.bs.select")}break;case"toggleDisabled":{toggleDisabled($select)}break;case"setDisabled":{setDisabled($select,param)}break;case"setItemsDisabled":{setItemsDisabled($select,param)}break;case"refresh":{refresh($select);trigger($select,"refresh.bs.select")}break}}return $select})};document.addEventListener("DOMContentLoaded",()=>{$('[data-bs-toggle="select"],[data-toggle="select"]').bsSelect()})})(jQuery);